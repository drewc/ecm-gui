
* ~MyLayout.vue~

We "stole" a layout and that's what the file was called.

* Searching

At the very top is a search bar.

#+begin_src vue :noweb-ref MyLayout-search-template
     <q-form class="YL__toolbar-input-container row no-wrap"
            @submit="searchMethod()" ref="searchForm">
       <q-input dense outlined square v-model="search" placeholder="Search" class="bg-white col" />
       <q-btn type="submit"
         :loading="searchLoading"
         class="YL__toolbar-input-btn"
         color="grey-3" text-color="grey-8" icon="search" unelevated
    />
     </q-form>
#+end_src

There are  data's needed.

#+begin_src javascript :noweb-ref MyLayout-search-data
search: '',
searchLoading: false
#+end_src

When that button is clicked, we search the text.

#+begin_src javascript :noweb-ref MyLayout-search-method
  searchMethod: function () {
    this.searchLoading = true
    this.$router.push({ path: '/claim/' + this.search })
    this.search = ''
    setTimeout(() => {
      // we're done, we reset loading state
      this.searchLoading = false
    }, 500)
  }
#+end_src




* Script

#+begin_src javascript :noweb-ref MyLayoutScript :noweb yes
  export default {
    name: 'MyLayout',
    components: {
    },
    methods: {
      code:<<MyLayout-search-method>>,
      ensureSession: function (rp) {
        return this.$ecm.findSessionPromise()
          .then((sess) => {
            // if not, route to login
            console.log('Find See' + rp)
            if (!sess && rp !== '/login') {
              this.$router.push({ path: '/login', query: { goto: rp } })
            } else {
              this.$ecm.session = sess
              // console.log(this.$route.path)
              if (this.$route.path !== rp) {
                this.$router.push({ path: rp })
              }
              this.$forceUpdate()
            }
          })
          .catch(function (error) {
            // handle error
            console.log(error.toJSON)
          })
      }
    },
    created: function () {
      // Are we logged in?
      var foo = this
      foo.ensureSession(foo.$route.path)
      // listen for an event
      this.$root.$on('login', foo.ensureSession)
    },

    data () {
      return {
        leftDrawerOpen: false,
        code:<<MyLayout-search-data>>,
        links1: [
          { icon: 'home', text: 'Home' },
          { icon: 'whatshot', text: 'Trending' },
          { icon: 'subscriptions', text: 'Subscriptions' }
        ],
        links2: [
          { icon: 'folder', text: 'Library' },
          { icon: 'restore', text: 'History' },
          { icon: 'watch_later', text: 'Watch later' },
          { icon: 'thumb_up_alt', text: 'Liked videos' }
        ],
        links3: [
          { icon: 'local_movies', text: 'Movies & Shows' },
          { icon: 'videogame_asset', text: 'Gaming' },
          { icon: 'live_tv', text: 'Live' }
        ],
        links4: [
          { icon: 'settings', text: 'Settings' },
          { icon: 'flag', text: 'Report history' },
          { icon: 'help', text: 'Help' },
          { icon: 'feedback', text: 'Send feedback' }
        ],
        buttons1: [
          { text: 'About' },
          { text: 'Press' },
          { text: 'Copyright' },
          { text: 'Contact us' },
          { text: 'Creators' },
          { text: 'Advertise' },
          { text: 'Developers' }
        ],
        buttons2: [
          { text: 'Terms' },
          { text: 'Privacy' },
          { text: 'Policy & Safety' },
          { text: 'Test new features' }
        ]
      }
    }

  }

#+end_src

* Template


#+begin_src vue :tangle "../src/layouts/MyLayout.vue" :noweb yes
  <template>
  <q-layout view="hHh lpR fFf" class="bg-grey-1">
    <q-header bordered class="bg-white text-grey-8 q-py-xs" height-hint="58">
      <q-toolbar v-if="$ecm.session">
        <q-btn
          flat
          dense
          round
          @click="leftDrawerOpen = !leftDrawerOpen"
          aria-label="Menu"
          icon="menu"
                  />
        <q-btn flat no-caps no-wrap class="q-ml-xs" v-if="$q.screen.gt.xs">
          <q-icon name="img:statics/app-logo-128x128.png" color="red" size="50px" />
          <q-toolbar-title shrink class="text-weight-bold">
            ECM
          </q-toolbar-title>
        </q-btn>
        <!-- {{ $ecm.session }} -->
        <q-space />
        code:<<MyLayout-search-template>>
        <q-space />
                  <div class="q-gutter-sm row items-center no-wrap">
                      <q-btn round dense flat color="grey-8" icon="video_call" v-if="$q.screen.gt.sm">
                          <q-tooltip>Create a video or post</q-tooltip>
                      </q-btn>
                      <q-btn round dense flat color="grey-8" icon="apps" v-if="$q.screen.gt.sm">
                          <q-tooltip>Apps</q-tooltip>
                      </q-btn>
                      <q-btn round dense flat color="grey-8" icon="message" v-if="$q.screen.gt.sm">
                          <q-tooltip>Messages</q-tooltip>
                      </q-btn>
                      <q-btn round dense flat color="grey-8" icon="notifications">
                          <q-badge color="red" text-color="white" floating>
                              2
                          </q-badge>
                          <q-tooltip>Notifications</q-tooltip>
                      </q-btn>
                      <q-btn round flat>
                          <q-avatar size="26px">
                              <img src="https://cdn.quasar.dev/img/boy-avatar.png">
                          </q-avatar>
                          <q-tooltip>Account</q-tooltip>
                      </q-btn>
                  </div>
              </q-toolbar>
          </q-header>

          <q-drawer
            v-if="$ecm.session"
            v-model="leftDrawerOpen"
            bordered
            content-class="bg-grey-2"
            :width="240"
          >
              <q-scroll-area class="fit">
                  <q-list padding>
                      <q-item @click.native="oURL('https://www.google.com');" v-ripple clickable>
                          <q-item-section>
                              <q-item-label>Test</q-item-label>
                          </q-item-section>
                      </q-item>
                      <q-item v-for="link in links1" :key="link.text" v-ripple clickable>
                          <q-item-section avatar>
                              <q-icon color="grey" :name="link.icon" />
                          </q-item-section>
                          <q-item-section>
                              <q-item-label>{{ link.text }}</q-item-label>
                          </q-item-section>
                      </q-item>

                      <q-separator class="q-my-md" />

                      <q-item v-for="link in links2" :key="link.text" v-ripple clickable>
                          <q-item-section avatar>
                              <q-icon color="grey" :name="link.icon" />
                          </q-item-section>
                          <q-item-section>
                              <q-item-label>{{ link.text }}</q-item-label>
                          </q-item-section>
                      </q-item>

                      <q-separator class="q-mt-md q-mb-xs" />

                      <q-item-label header class="text-weight-bold text-uppercase">
                          More from Youtube
                      </q-item-label>

                      <q-item v-for="link in links3" :key="link.text" v-ripple clickable>
                          <q-item-section avatar>
                              <q-icon color="grey" :name="link.icon" />
                          </q-item-section>
                          <q-item-section>
                              <q-item-label>{{ link.text }}</q-item-label>
                          </q-item-section>
                      </q-item>

                      <q-separator class="q-my-md" />

                      <q-item v-for="link in links4" :key="link.text" v-ripple clickable>
                          <q-item-section avatar>
                              <q-icon color="grey" :name="link.icon" />
                          </q-item-section>
                          <q-item-section>
                              <q-item-label>{{ link.text }}</q-item-label>
                          </q-item-section>
                      </q-item>

                      <q-separator class="q-mt-md q-mb-lg" />

                      <div class="q-px-md text-grey-9">
                          <div class="row items-center q-gutter-x-sm q-gutter-y-xs">
                              <a
                                v-for="button in buttons1"
                                :key="button.text"
                                class="YL__drawer-footer-link"
                                href="javascript:void(0)"
                              >
                                  {{ button.text }}
                              </a>
                          </div>
                      </div>
                      <div class="q-py-md q-px-md text-grey-9">
                          <div class="row items-center q-gutter-x-sm q-gutter-y-xs">
                              <a
                                v-for="button in buttons2"
                                :key="button.text"
                                class="YL__drawer-footer-link"
                                href="javascript:void(0)"
                              >
                                  {{ button.text }}
                              </a>
                          </div>
                      </div>
                  </q-list>
              </q-scroll-area>
          </q-drawer>

          <q-page-container>
              {{ $router.path }}
              <router-view />
          </q-page-container>
      </q-layout>
  </template>

  <script>
  code:<<MyLayoutScript>>
  </script>

  <style lang="sass">
  .YL

    &__toolbar-input-container
      min-width: 100px
      width: 55%

    &__toolbar-input-btn
      border-radius: 0
      border-style: solid
      border-width: 1px 1px 1px 0
      border-color: rgba(0,0,0,.24)
      max-width: 60px
      width: 100%

    &__drawer-footer-link
      color: inherit
      text-decoration: none
      font-weight: 500
      font-size: .75rem

      &:hover
        color: #000
  </style>
#+end_src



* Literate Tangling

Because our linting needs certain things to be indented, we fsck with noweb a wee bit.

#+begin_src emacs-lisp
  (setq-local org-babel-noweb-wrap-start "code:<<")
  (add-hook 'org-babel-post-tangle-hook #'delete-trailing-whitespace)

  (setq js-indent-level 2)
  (add-hook 'org-babel-post-tangle-hook #'save-buffer :append)
  ;; # Local Variables:
  ;; # org-babel-noweb-wrap-start: "code:<<"
  ;; # End:
  org-babel-noweb-wrap-start
#+end_src
